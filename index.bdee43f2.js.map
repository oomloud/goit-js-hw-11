{"mappings":"CAaiB,CACbA,KAAMC,SAASC,cAAc,gBAC7BC,MAAOF,SAASC,cAAc,iBAC9BE,QAASH,SAASC,cAAc,cAG3BF,KAAKK,iBAAiB,UAO/BC,eAA6BC,GACzBA,EAAIC,gB","sources":["src/index.js"],"sourcesContent":["// TODO: BONUS: add switcher between page loading and infinite scroll\n// Створи фронтенд частину застосунку пошуку і перегляду зображень за ключовим словом. Додай оформлення елементів інтерфейсу.\n// Для бекенду використовуй публічний API сервісу Pixabay. Зареєструйся, отримай свій унікальний ключ доступу і ознайомся з документацією.\n// Елемент div.gallery спочатку міститься в HTML документі, і в нього необхідно рендерити розмітку карток зображень. Під час пошуку за новим ключовим словом необхідно повністю очищати вміст галереї, щоб не змішувати результати.\n// Pixabay API підтримує пагінацію і надає параметри page і per_page. Зроби так, щоб в кожній відповіді приходило 40 об'єктів (за замовчуванням 20).\n// В початковому стані кнопка повинна бути прихована.\n// Після першого запиту кнопка з'являється в інтерфейсі під галереєю.\n// При повторному сабміті форми кнопка спочатку ховається, а після запиту знову відображається.\n// У відповіді бекенд повертає властивість totalHits - загальна кількість зображень, які відповідають критерію пошуку (для безкоштовного акаунту). Якщо користувач дійшов до кінця колекції, ховай кнопку і виводь повідомлення з текстом \"We're sorry, but you've reached the end of search results.\".\n\nimport axios from 'axios';\n\n\nconst elements = {\n    form: document.querySelector(\".search-form\"),\n    input: document.querySelector(\".input-search\"),\n    gallery: document.querySelector(\".gallery\")\n}\n\nelements.form.addEventListener('submit', submitHandler);\n\nconst params = {\n    method: 'get',\n    baseURL: 'https://some-domain.com/api',\n}\n\nasync function submitHandler(evt) {\n    evt.preventDefault();\n} "],"names":["form","document","querySelector","input","gallery","addEventListener","async","evt","preventDefault"],"version":3,"file":"index.bdee43f2.js.map"}